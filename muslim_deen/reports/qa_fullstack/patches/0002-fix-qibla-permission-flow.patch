diff --git a/.gitignore b/.gitignore
index 39262f8..9a3568b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -6,4 +6,5 @@
 # Documentation
 muslim_deen/WIDGET_IMPLEMENTATION.md
 muslim_deen/test_notification_persistence.md
-*.md
\ No newline at end of file
+*.md
+audit/
\ No newline at end of file
diff --git a/muslim_deen/lib/main.dart b/muslim_deen/lib/main.dart
index 56679a9..87c8db7 100644
--- a/muslim_deen/lib/main.dart
+++ b/muslim_deen/lib/main.dart
@@ -450,13 +450,7 @@ class _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      body: IndexedStack(
-        index: _selectedIndex,
-        children: [
-          for (int i = 0; i < _widgetBuilders.length; i++)
-            _cachedWidgets[i] ??= _widgetBuilders[i](),
-        ],
-      ),
+      body: _cachedWidgets[_selectedIndex] ??= _widgetBuilders[_selectedIndex](),
       bottomNavigationBar: _buildBottomNavigationBar(context),
     );
   }
diff --git a/muslim_deen/lib/services/location_permission_helper.dart b/muslim_deen/lib/services/location_permission_helper.dart
index 0071cf2..ee7c764 100644
--- a/muslim_deen/lib/services/location_permission_helper.dart
+++ b/muslim_deen/lib/services/location_permission_helper.dart
@@ -40,23 +40,38 @@ class LocationPermissionHelper {
 
   /// Validate location prerequisites and return appropriate error message
   static Future<LocationValidationResult> validateLocationAccess() async {
-    final hasPermission = await hasLocationPermission();
-    if (!hasPermission) {
+    // 1. Check if location services are enabled
+    final isServiceEnabled = await isLocationServiceEnabled();
+    if (!isServiceEnabled) {
       return LocationValidationResult(
         isValid: false,
-        errorMessage:
-            'Location permission denied. Please enable it in settings.',
+        errorMessage: 'Location service is disabled. Please enable it.',
       );
     }
 
-    final isServiceEnabled = await isLocationServiceEnabled();
-    if (!isServiceEnabled) {
+    // 2. Check permission status
+    var permission = await Geolocator.checkPermission();
+
+    // 3. If denied, request it
+    if (permission == LocationPermission.denied) {
+      permission = await Geolocator.requestPermission();
+      if (permission == LocationPermission.denied) {
+        return LocationValidationResult(
+          isValid: false,
+          errorMessage: 'Location permission is required to find the Qibla direction.',
+        );
+      }
+    }
+
+    // 4. If denied forever, show error
+    if (permission == LocationPermission.deniedForever) {
       return LocationValidationResult(
         isValid: false,
-        errorMessage: 'Location service is disabled. Please enable it.',
+        errorMessage: 'Location permission is permanently denied. Please enable it in your device settings.',
       );
     }
 
+    // 5. If granted, return success
     return LocationValidationResult(isValid: true);
   }
 }
diff --git a/muslim_deen/lib/views/home_view.dart b/muslim_deen/lib/views/home_view.dart
index c598c44..c78f018 100644
--- a/muslim_deen/lib/views/home_view.dart
+++ b/muslim_deen/lib/views/home_view.dart
@@ -1014,15 +1014,25 @@ class _HomeViewState extends ConsumerState<HomeView>
         title: "Prayer Times",
         brightness: brightness,
         actions: [
-          IconButton(
-            icon: const Icon(Icons.brightness_2),
-            onPressed: _navigateToMoonPhases,
-            tooltip: 'Moon Phase Details',
+          Semantics(
+            button: true,
+            label: 'Moon Phase Details',
+            hint: 'View moon phase details and lunar calendar information',
+            child: IconButton(
+              icon: const Icon(Icons.brightness_2),
+              onPressed: _navigateToMoonPhases,
+              tooltip: 'Moon Phase Details',
+            ),
           ),
-          IconButton(
-            icon: const Icon(Icons.bar_chart),
-            onPressed: _navigateToPrayerStats,
-            tooltip: 'Prayer Statistics',
+          Semantics(
+            button: true,
+            label: 'Prayer Statistics',
+            hint: 'View prayer completion statistics and history',
+            child: IconButton(
+              icon: const Icon(Icons.bar_chart),
+              onPressed: _navigateToPrayerStats,
+              tooltip: 'Prayer Statistics',
+            ),
           ),
         ],
       ),
@@ -1122,12 +1132,15 @@ class _HomeViewState extends ConsumerState<HomeView>
 
     return Column(
       children: [
-        _buildLocationAndDateSection(
-          formattedGregorian,
-          formattedHijri,
-          displayCity,
-          displayCountry,
-          colors,
+        Padding(
+          padding: const EdgeInsets.fromLTRB(16, 16, 16, 8),
+          child: _buildLocationAndDateContent(
+            formattedGregorian,
+            formattedHijri,
+            displayCity,
+            displayCountry,
+            colors,
+          ),
         ),
         const RamadanCountdownBanner(),
         if (_isRamadan())
@@ -1155,67 +1168,64 @@ class _HomeViewState extends ConsumerState<HomeView>
     );
   }
 
-  Widget _buildLocationAndDateSection(
+  Widget _buildLocationAndDateContent(
     String formattedGregorian,
     String formattedHijri,
     String? displayCity,
     String? displayCountry,
     UIColors colors,
   ) {
-    return Padding(
-      padding: const EdgeInsets.fromLTRB(16, 16, 16, 8),
-      child: Row(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          GestureDetector(
-            onDoubleTap: () => _navigateToSettings(scrollToDate: true),
+    return Row(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        GestureDetector(
+          onDoubleTap: () => _navigateToSettings(scrollToDate: true),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Text(
+                formattedGregorian,
+                style: AppTextStyles.date(
+                  colors.brightness,
+                ).copyWith(fontSize: 15),
+              ),
+              Text(
+                formattedHijri,
+                style: AppTextStyles.dateSecondary(
+                  colors.brightness,
+                ).copyWith(fontSize: 13),
+              ),
+            ],
+          ),
+        ),
+        const Spacer(),
+        Flexible(
+          child: GestureDetector(
+            onDoubleTap: () => _navigateToSettings(scrollToLocation: true),
             child: Column(
-              crossAxisAlignment: CrossAxisAlignment.start,
+              crossAxisAlignment: CrossAxisAlignment.end,
               children: [
-                Text(
-                  formattedGregorian,
-                  style: AppTextStyles.date(
-                    colors.brightness,
-                  ).copyWith(fontSize: 15),
-                ),
-                Text(
-                  formattedHijri,
-                  style: AppTextStyles.dateSecondary(
-                    colors.brightness,
-                  ).copyWith(fontSize: 13),
-                ),
+                if (displayCity?.isNotEmpty == true)
+                  Text(
+                    displayCity!,
+                    style: AppTextStyles.locationCity(colors.brightness),
+                    textAlign: TextAlign.end,
+                    overflow: TextOverflow.ellipsis,
+                    maxLines: 2,
+                  ),
+                if (displayCountry?.isNotEmpty == true)
+                  Text(
+                    displayCountry!,
+                    style: AppTextStyles.locationCountry(colors.brightness),
+                    textAlign: TextAlign.end,
+                    overflow: TextOverflow.ellipsis,
+                    maxLines: 1,
+                  ),
               ],
             ),
           ),
-          const Spacer(),
-          Flexible(
-            child: GestureDetector(
-              onDoubleTap: () => _navigateToSettings(scrollToLocation: true),
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.end,
-                children: [
-                  if (displayCity?.isNotEmpty == true)
-                    Text(
-                      displayCity!,
-                      style: AppTextStyles.locationCity(colors.brightness),
-                      textAlign: TextAlign.end,
-                      overflow: TextOverflow.ellipsis,
-                      maxLines: 2,
-                    ),
-                  if (displayCountry?.isNotEmpty == true)
-                    Text(
-                      displayCountry!,
-                      style: AppTextStyles.locationCountry(colors.brightness),
-                      textAlign: TextAlign.end,
-                      overflow: TextOverflow.ellipsis,
-                      maxLines: 1,
-                    ),
-                ],
-              ),
-            ),
-          ),
-        ],
-      ),
+        ),
+      ],
     );
   }
 
diff --git a/muslim_deen/lib/widgets/optimized_prayer_list_item.dart b/muslim_deen/lib/widgets/optimized_prayer_list_item.dart
index 24a3796..da4660b 100644
--- a/muslim_deen/lib/widgets/optimized_prayer_list_item.dart
+++ b/muslim_deen/lib/widgets/optimized_prayer_list_item.dart
@@ -252,7 +252,7 @@ class _OptimizedPrayerListItemState
           splashColor: splashColors.splash,
           highlightColor: splashColors.highlight,
           child: Container(
-            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 14),
+            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 16),
             decoration: BoxDecoration(
               color: itemColors.background,
               border: const Border(top: BorderSide(color: Colors.transparent)),
@@ -322,15 +322,24 @@ class _OptimizedPrayerListItemState
                         ),
                       ),
                     )
-                    : Checkbox(
-                      key: ValueKey('checkbox_$_prayerKey'),
-                      value: _isCompleted,
-                      onChanged:
-                          (_isCompleted || _hasPrayerPassed())
-                              ? (bool? value) => _toggleCompletionStatus()
-                              : null,
-                      activeColor: itemColors.icon,
-                      checkColor: itemColors.background,
+                    : Semantics(
+                      button: true,
+                      label: _isCompleted
+                          ? 'Mark ${widget.prayerInfo.name} as incomplete'
+                          : 'Mark ${widget.prayerInfo.name} as completed',
+                      hint: _hasPrayerPassed() || _isCompleted
+                          ? 'Double tap to toggle prayer completion status'
+                          : 'This prayer time has not arrived yet',
+                      child: Checkbox(
+                        key: ValueKey('checkbox_$_prayerKey'),
+                        value: _isCompleted,
+                        onChanged:
+                            (_isCompleted || _hasPrayerPassed())
+                                ? (bool? value) => _toggleCompletionStatus()
+                                : null,
+                        activeColor: itemColors.icon,
+                        checkColor: itemColors.background,
+                      ),
                     ),
               ],
             ),
diff --git a/muslim_deen/lib/widgets/prayer_list_item.dart b/muslim_deen/lib/widgets/prayer_list_item.dart
index 872ed61..b3d5946 100644
--- a/muslim_deen/lib/widgets/prayer_list_item.dart
+++ b/muslim_deen/lib/widgets/prayer_list_item.dart
@@ -129,7 +129,7 @@ class _PrayerListItemState extends ConsumerState<PrayerListItem> {
         splashColor: splashColors.splash,
         highlightColor: splashColors.highlight,
         child: Container(
-          padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 14),
+          padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 16),
           decoration: BoxDecoration(
             color: itemColors.background,
             border: const Border(top: BorderSide(color: Colors.transparent)),
@@ -183,14 +183,23 @@ class _PrayerListItemState extends ConsumerState<PrayerListItem> {
                       ),
                     ),
                   )
-                  : Checkbox(
-                    value: _isCompleted,
-                    onChanged:
-                        (_isCompleted || _hasPrayerPassed())
-                            ? (bool? value) => _toggleCompletion()
-                            : null, // Disable checkbox for upcoming prayers
-                    activeColor: itemColors.icon,
-                    checkColor: itemColors.background,
+                  : Semantics(
+                    button: true,
+                    label: _isCompleted
+                        ? 'Mark ${widget.prayerInfo.name} as incomplete'
+                        : 'Mark ${widget.prayerInfo.name} as completed',
+                    hint: _hasPrayerPassed() || _isCompleted
+                        ? 'Double tap to toggle prayer completion status'
+                        : 'This prayer time has not arrived yet',
+                    child: Checkbox(
+                      value: _isCompleted,
+                      onChanged:
+                          (_isCompleted || _hasPrayerPassed())
+                              ? (bool? value) => _toggleCompletion()
+                              : null, // Disable checkbox for upcoming prayers
+                      activeColor: itemColors.icon,
+                      checkColor: itemColors.background,
+                    ),
                   ),
             ],
           ),
diff --git a/muslim_deen/lib/widgets/prayer_times_section.dart b/muslim_deen/lib/widgets/prayer_times_section.dart
index 9910fbe..b3b80aa 100644
--- a/muslim_deen/lib/widgets/prayer_times_section.dart
+++ b/muslim_deen/lib/widgets/prayer_times_section.dart
@@ -47,11 +47,14 @@ class PrayerTimesSection extends StatelessWidget {
             padding: const EdgeInsets.fromLTRB(16, 12, 16, 4),
             child: Align(
               alignment: Alignment.centerLeft,
-              child: Text(
-                "Prayer Times",
-                style: AppTextStyles.sectionTitle(
-                  colors.brightness,
-                ).copyWith(color: colors.textColorPrimary),
+              child: Semantics(
+                header: true,
+                child: Text(
+                  "Prayer Times",
+                  style: AppTextStyles.sectionTitle(
+                    colors.brightness,
+                  ).copyWith(color: colors.textColorPrimary),
+                ),
               ),
             ),
           ),
