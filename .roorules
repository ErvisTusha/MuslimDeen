- Not every interaction requires code changes or new features.
- Remove all unused and redundant comments from the code, retaining only those that add meaningful context or clarify complex logic.
- Analyze the code for potential logical errors and fix them.
- Analyze the code for potential performance issues and optimize where necessary and fix them.
- Analyze the project for unused imports, variables, functions, files, and folders. Cautiously remove identified dead code, ensuring no existing functionality is broken. After any removal, execute all integrated unit tests and verify application behavior through manual checks and observing the output pane.

- Ensure that all variable names are descriptive and follow a consistent naming convention.
- Ensure that all functions and classes are properly organized and follow a consistent structure.
- Ensure that all imports are necessary and organized in a standard way (e.g., standard library imports first, followed by third-party imports, and then local application/library-specific imports).